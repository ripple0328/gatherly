defmodule Gatherly.Repo.Migrations.AddEventsAndMagicLinks do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:users) do
      modify :email, :citext, null: true
      add :user_type, :text, null: false, default: "oauth"
      add :anonymous_token, :text
    end

    create table(:magic_links, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :token, :text, null: false
      add :event_id, :uuid, null: false
      add :expires_at, :utc_datetime, null: false
      add :uses_count, :bigint, null: false, default: 0
      add :max_uses, :bigint
      add :created_by, :uuid, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:events, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:magic_links) do
      modify :event_id,
             references(:events,
               column: :id,
               name: "magic_links_event_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :created_by,
             references(:users,
               column: :id,
               name: "magic_links_created_by_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:events) do
      add :title, :text, null: false
      add :description, :text

      add :creator_id,
          references(:users,
            column: :id,
            name: "events_creator_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end
  end

  def down do
    drop constraint(:events, "events_creator_id_fkey")

    alter table(:events) do
      remove :updated_at
      remove :inserted_at
      remove :creator_id
      remove :description
      remove :title
    end

    drop constraint(:magic_links, "magic_links_event_id_fkey")

    drop constraint(:magic_links, "magic_links_created_by_fkey")

    alter table(:magic_links) do
      modify :created_by, :uuid
      modify :event_id, :uuid
    end

    drop table(:events)

    drop table(:magic_links)

    alter table(:users) do
      remove :anonymous_token
      remove :user_type
      modify :email, :citext, null: false
    end
  end
end
