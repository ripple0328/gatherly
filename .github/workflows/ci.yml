name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test

jobs:
  format:
    name: 🎨 Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-format-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-format-

      - name: Install just
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Environment health check
        run: just doctor

      - name: Check code formatting
        run: just _run 'mix format --check-formatted'
        env:
          DOCKER_BUILDKIT: 1

  lint:
    name: 🔍 Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-lint-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-lint-

      - name: Install just
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Environment health check
        run: just doctor

      - name: Run Credo linting
        run: just _run 'mix credo --strict'
        env:
          DOCKER_BUILDKIT: 1

  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-test-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-test-

      - name: Install just
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Environment health check
        run: just doctor

      - name: Run tests
        run: just test
        env:
          DOCKER_BUILDKIT: 1

  deploy:
    name: 🚀 Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [format, lint, test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Install just
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Validate secrets
        run: |
          if [ -z "$FLY_API_TOKEN" ]; then
            echo "❌ FLY_API_TOKEN is not set"
            exit 1
          fi
          echo "✅ Required secrets are present"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy to Fly.io
        run: just deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          DOCKER_BUILDKIT: 1

      - name: Verify deployment
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          
          # Check health endpoint
          if curl -f -s https://gatherly.qingbo.us/health > /dev/null; then
            echo "✅ Deployment health check passed"
          else
            echo "❌ Deployment health check failed"
            exit 1
          fi
