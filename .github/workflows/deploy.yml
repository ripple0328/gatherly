name: Deploy to Fly.io

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment:
      name: staging
      url: https://gatherly-staging.fly.dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to staging
        run: |
          flyctl deploy --config fly.staging.toml --app gatherly-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment:
      name: production
      url: https://gatherly.fly.dev
    needs: [quality-gate]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to production
        run: |
          flyctl deploy --app gatherly
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Run post-deployment checks
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üîç Running health checks..."
          
          # Wait for deployment to be ready
          sleep 30
          
          # Check application health
          curl -f https://gatherly.fly.dev/ || exit 1
          curl -f https://gatherly.qingbo.us/ || exit 1
          
          echo "‚úÖ Health checks passed!"

      - name: Notify deployment success
        if: success()
        run: |
          echo "üéâ Production deployment successful!"
          echo "üì± App URL: https://gatherly.fly.dev"
          echo "üåê Custom domain: https://gatherly.qingbo.us"

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
        env:
          ImageOS: ubuntu22

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build/test
          key: deps-${{ runner.os }}-${{ hashFiles('mix.lock') }}-${{ hashFiles('.tool-versions') }}

      - name: Install dependencies
        run: |
          mix deps.get
          mix deps.compile

      - name: Run quality checks
        run: mix quality.ci

      - name: Quality gate passed
        run: |
          echo "‚úÖ All quality checks passed!"
          echo "üöÄ Ready for production deployment"